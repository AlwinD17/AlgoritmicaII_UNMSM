/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Interfaces.StudentUI;

import com.ejercicios.Text;

import javax.swing.*;
import java.awt.*;
import java.util.ArrayList;


public class Exercises extends javax.swing.JPanel {
    private JPanel panelTextos;
    private JScrollPane jScrollPane;
    private JTextField textFieldBuscar;
    /**
     * Creates new form Exercises
     */
    public Exercises() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        panelTextos = new JPanel();
        textFieldBuscar = new JTextField();
    
        setOpaque(false);
        setPreferredSize(new Dimension(1005, 764));
    
        panelTextos.setBackground(new Color(241, 248, 255));
        panelTextos.setLayout(new BoxLayout(panelTextos, BoxLayout.Y_AXIS));
    
        // Agregar el JScrollPane correctamente
        jScrollPane = new JScrollPane(panelTextos);
        jScrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
    
        textFieldBuscar.setText("Buscar texto");
        textFieldBuscar.addActionListener(evt -> jTextField1ActionPerformed(evt));
    
        GroupLayout layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(17, 17, 17)
                    .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(textFieldBuscar, GroupLayout.PREFERRED_SIZE, 310, GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 0, Short.MAX_VALUE)))
                    .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(textFieldBuscar, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addGap(28, 28, 28)
                    .addComponent(jScrollPane, GroupLayout.DEFAULT_SIZE, 586, Short.MAX_VALUE)
                    .addGap(42, 42, 42))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed
    /**
     * Este método mostrará los textos activos en JTextAreas.
     * @param textosActivos La lista de textos activos.
     */
    public void mostrarTextosActivos(ArrayList<Text> textosActivos) {
        // Elimina todos los componentes existentes en el panel de textos
        panelTextos.removeAll();

        // Itera sobre los textos y crea contenedores con su propio JTextArea y botón para cada uno
        for (Text texto : textosActivos) {
            JPanel contenedor = crearContenedorTexto(texto);
            panelTextos.add(contenedor);
        }

        // Revalida y repinta el panel de textos para reflejar los cambios
        panelTextos.revalidate();
        panelTextos.repaint();
    }

    private JPanel crearContenedorTexto(Text texto) {
    JPanel contenedor = new JPanel();
    contenedor.setBackground(new Color(241, 248, 255)); // Color de fondo claro
    contenedor.setLayout(new BoxLayout(contenedor, BoxLayout.X_AXIS));
    
    // Espaciado entre cada texto (arriba y abajo)
    contenedor.setBorder(BorderFactory.createEmptyBorder(10, 0, 10, 0));

    JTextArea textArea = new JTextArea();
    configurarTextArea(textArea, texto.getContent());

    JButton button = new JButton("Empezar");
    configurarBoton(button);

    contenedor.add(textArea);
    contenedor.add(button);

    return contenedor;
}

    private void configurarTextArea(JTextArea textArea, String content) {
        textArea.setEditable(false);
        textArea.setLineWrap(true);
        textArea.setWrapStyleWord(true);
        textArea.setText(content);
        textArea.setPreferredSize(new Dimension(300, 150));

        // Establecer el color de fondo del JTextArea
        textArea.setBackground(new Color(200, 230, 255));  // Puedes ajustar este color según tus preferencias
    }

    private void configurarBoton(JButton button) {
        button.addActionListener(e -> {
            // Lógica para el botón, si es necesario
            System.out.println("Botón presionado para el contenedor actual");
        });
    }
}
